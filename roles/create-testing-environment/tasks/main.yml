---
- name: 'Login to docker hub'
  community.docker.docker_login:
    username: "{{ dockerhub_un }}"
    password: "{{ dockerhub_pw }}"

- name: 'Create a local docker testing environment using image {{ test_platform_image }}'
  community.docker.docker_container:
    name: "{{ test_platform_image_name }}"
    image: "{{ test_platform_image }}"
    interactive: true
    published_ports:
      - '2222:22'
    exposed_ports:
      - '2222:22'
    tty: true
    privileged: true
    init: true
    state: started
    recreate: true
  register: _results

- name: 'Install openssh-server'
  community.docker.docker_container_exec:
    container: "{{ test_platform_image_name }}"
    command: "/bin/bash -c 'yum install openssh-server -y'"

- name: 'Add ssh service account'
  community.docker.docker_container_exec:
    container: "{{ test_platform_image_name }}"
    command: "/bin/bash -c '/usr/sbin/adduser {{ ssh_service_account_name }}'"

- name: 'Make .ssh directory and set permissions'
  community.docker.docker_container_exec:
    container: "{{ test_platform_image_name }}"
    command: "/bin/bash -c '/usr/bin/mkdir /home/{{ ssh_service_account_name }}/.ssh; /usr/bin/chmod 700 /home/{{ ssh_service_account_name }}/.ssh; /usr/bin/chown {{ ssh_service_account_name }} /home/{{ ssh_service_account_name }}/.ssh'"

- name: 'Create .ssh authorized_keys'
  community.docker.docker_container_exec:
    container: "{{ test_platform_image_name }}"
    command: "/bin/bash -c '/usr/bin/touch /home/{{ ssh_service_account_name }}/.ssh/authorized_keys'"

- name: 'Set fact for test ssh account public key'
  ansible.builtin.set_fact:
    test_ssh_account_public_key: "{{ lookup('file', '/home/{{ ssh_service_account_name }}/.ssh/id_rsa.pub') }}"

- name: 'Add public key to .ssh authorized_keys'
  community.docker.docker_container_exec:
    container: "{{ test_platform_image_name }}"
    command: "/bin/bash -c '/usr/bin/echo {{ test_ssh_account_public_key }} >> /home/{{ ssh_service_account_name }}/.ssh/authorized_keys'"

- name: 'Setup permissions on .ssh authorized_keys'
  community.docker.docker_container_exec:
    container: "{{ test_platform_image_name }}"
    command: "/bin/bash -c '/usr/bin/chown {{ ssh_service_account_name }} /home/{{ ssh_service_account_name }}/.ssh/authorized_keys; /usr/bin/chmod 400 /home/{{ ssh_service_account_name }}/.ssh/authorized_keys'"

- name: 'Check to see if /root/.ssh/id_rsa exists'
  community.docker.docker_container_exec:
    container: "{{ test_platform_image_name }}"
    command: "/bin/bash -c 'ls -la /root/.ssh/id_rsa'"
  register: _key_results
  ignore_errors: true

- name: 'Generate ssh keys for root'
  community.docker.docker_container_exec:
    container: "{{ test_platform_image_name }}"
    command: /bin/bash -c "ssh-keygen -q -N '' <<< ''"
  when: _key_results.rc > 0

- name: 'Copy ssh keys where they need to be for sshd'
  community.docker.docker_container_exec:
    container: "{{ test_platform_image_name }}"
    command: "{{ item }}"
  loop:
    - /bin/bash -c "cp /root/.ssh/id_rsa /etc/ssh/ssh_host_rsa_key"
    - /bin/bash -c "cp /root/.ssh/id_rsa.pub /etc/ssh/ssh_host_rsa_key.pub"

- name: 'Start sshd daemon'
  community.docker.docker_container_exec:
    container: "{{ test_platform_image_name }}"
    command: "/bin/bash -c '/usr/sbin/sshd -D &'"

- name: 'Create sudoers.d file'
  community.docker.docker_container_exec:
    container: "{{ test_platform_image_name }}"
    command: "/bin/bash -c '/usr/bin/touch /etc/sudoers.d/{{ test_platform_image_name }}'"

- name: 'Write out sudoers.d file locally'
  ansible.builtin.lineinfile:
    path: "./{{ test_platform_image_name }}"
    line: "{{ ssh_service_account_name }} ALL=(ALL) NOPASSWD: ALL"
    create: true

- name: 'Add ssh service account to sudoers.d file'
  community.docker.docker_container_copy_into:
    container: "{{ test_platform_image_name }}"
    path: "{{ test_platform_image_name }}"
    container_path: "/etc/sudoers.d/{{ test_platform_image_name }}"

- name: 'Get the IP address of the new testing environment'
  ansible.builtin.set_fact:
    _test_ip:  "{{ _results | json_query(_query) }}"
  vars:
    _query: "container.NetworkSettings.IPAddress"

- name: 'Add the IP to ansible inventory'
  ansible.builtin.lineinfile:
    path: inventory
    line: "{{ _test_ip }}"
    insertafter: EOF
...
